---
isChild: true
anchor:  namespaces
---

## Namespace များ {#namespaces_title}

အထက်မှာညွှန်းဆိုခဲ့သလိုဘဲ PHP community မှာ developer တွေအများကြီးကများစွာသော code တွေကို create လုပ်နေကြတယ်။ ဒါကဘာကိုဆိုလိုတာလည်းဆိုရင် PHP Library တစ်ခုမှာ Class တူတဲ့ PHP code တွေကို နောက် Library တစ်ခုကရေးမိမှာပါဘဲ။ အဲ့လို Libraries နှစ်ခုက namespace တစ်ခုတည်းမှာရေးမိခဲ့တယ်ဆိုရင် အဲ့နှစ်ခုကပြသနာတက်ပါလိမ့်မယ်။ 

_Namespaces_ တွေကအဲ့ပြသနာတွေကိုဖြေရှင်းလိုက်ပါတယ်။ PHP ရဲ့ manual မှာဖော်ပြတာကတော့ namespaces တွေက operating system ရဲ့ directories တွေကို  အဲ့ဒီ့ _namespace_ files ကနှိုင်းယှဥ်ပါလိမ့် ၊ အမည်တူတဲ့ files နှစ်ခုက မတူညီတဲ့ co directory နှစ်ခုမှာရှိပါမယ်။ အဲ့လိုဘဲ ၊ PHP Class နှစ်ခုကအမည်အတူတူဘဲ၊ namespace ကွဲပြီးတည်ရှိလိမ့်မယ်။ ထိုသို့ကဲ့သို့ရိုးရှင်းပါတယ်။ 

သင့် code ကို namespace ပေးဖို့အရေးကြီးပါတယ် ဒါမှ အခြား developer တစ်ယောက်ကအဲ့ဒါကိုအသုံးပြုတဲ့အချိန်မှာအခြား libraries တွေနဲ့ အမည်တူတာ/တိုက်မိတာကို မကြောက်မလန့်ဘဲနဲ့ အသုံးပြုနိုင်ပါလိမ့်မယ်။ 

Namespace ကိုအသုံးပြုဖို့ရာ outline တစ်ခုကတော့ [PSR-4][PSR4] ဖြစ်ပါတယ်၊ ဒါက standard file တစ်ခုဖြစ်ဖို့ရာအတွက်ရည်ရွယ်ပါတယ်၊ class နဲ့ namespace convention က plug-and-play code ကို ခွင့်ပြုရန်အတွက်ပါ။ 

အောက်တိုဘာလ, 2014 ခုနှစ်မှာ PHP-FIG က အရင်က autoloading standard [PSR-0][psr0] ကိုကန့်ကွက်ခဲ့ပါတယ်၊ အဲ့ဒါကို [PSR-4][psr4] နဲ့ replace လုပ်ခဲ့ပါတယ်။ လောလောဆယ်မှာတော့ နှစ်ခုစလုံးကအသုံးပြုလို့ရသေးပါတယ်။ PSR-4 က PHP 5.3 လိုအပ်ပါတယ် နောက်PHP 5.2 နဲ့ develop လုပ်ထားတဲ့ များစွာသော Projects တွေကတော့ PSR-0 ကို implement လုပ်ပြီးအသုံးပြုနေဆဲပါ။ 


* [Read about Namespaces][namespaces]
* [Read about PSR-0][psr0]
* [Read about PSR-4][psr4]


[namespaces]: http://php.net/language.namespaces
[psr0]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md
[psr4]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md
