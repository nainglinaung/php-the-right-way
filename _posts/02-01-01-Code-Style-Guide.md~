---
anchor: code_style_guide
---

# Code စတိုင်လမ်းညွှန် {#code_style_guide_title}

PHP community ကကြီးတယ် နောက် မတူညီဘူး၊ မရေမတွက်နိုင်လောက်တဲ့ libraries တွေ frameworks တွေနောက် components တွေလည်းအများကြီးရှိပါတယ်။ ဒါက PHP developer တွေအတွက်ယျေဘူယျအားဖြင့်ရွေးချယ်စရာတွေအများကြီးပါနောက်ပြီးအဲ့ဒါတွေကို Project တစ်ခုထဲမှာပေါင်းစည်းလိုက်တယ်။ ဒါကအရေးကြီးပါတယ်။ PHP code တွေလိုက်နာရန်အတွက်ယျေဘူယျ code style တစ်ခုရှိမှ အဲ့ဒါက developer တွေကို များစွာသော libraries တွေကိုလွယ်လွယ်ကူကူ mix/match လုပ်ပြီးသူတို့ Project တွေအတွက်အသုံးပြုနိုင်အောင်ဖြစ်ပါတယ်။

[Framework Interop Group][fig] ကနေပြီးတော့ style recommendations တွေကို အဆိုပြုလက်ခံထားကြတယ်။ အဲ့ဒီ့ recommendations တွေအကုန်လုံးက code-style နဲ့မပတ်သတ်ပါဘူး ဒါပေမယ့် သူတို့လုပ်ခဲ့တဲ့ဟာတွေကတော့[PSR-0][psr0], [PSR-1][psr1], [PSR-2][psr2] နဲ့ [PSR-4][psr4] တို့ဘဲဖြစ်ပါတယ်။ ဒီ recommendations တွေက rules တွေစုထားရုံသာဖြစ်ပါတယ် အချို့ projects တွေဖြစ်တဲ့ Drupal, Zend, Symfony, CakePHP, phpBB, AWS SDK,
FuelPHP, Lithium အစရှိတာတွေကလည်း rules ချမှတ်ရန်စတင်နေကြပါပြီ ။ အဲ့ဒါတွေကို သင့်ကိုပိုင် Project တွေမှာလည်းအသုံးပြုနိုင်ပါတယ်၊ ဒါမှမဟုတ်ရင် သင့်ကိုယ်ပိုင်နည်းကိုဘဲဆက်သုံးပေါ့။ 

အကောင်းဆုံးကတော့သင်လူသိများစံဖို့လိုက်နာစောင့်ထိန်းသော PHP ကို​​ code ရေးသားသင့်ပါတယ်။ ဒါက PSR ကိုထက်ထည့်တာတစ်ခုဖြစ်နိုင်ပါတယ်၊ ဒါမှမဟုတ်ရင် PEAR ဒါမှမဟုတ် Zend coding standard တစ်ခုကိုအသုံးပြုသင့်ပါတယ်။ ဒါက တစ်ခြား developer တွေကသင့် code ကိုလွယ်လွယ်ကူကူ ဖတ်နိုင်၊ အလုပ်လုပ်နိုင်တယ်ဆိုတာကိုဆိုလိုတာပါဘဲ။ နောက်ပြီးတော့applications က third-party code တွေအများကြီးကိုအသုံးပြုတယ်ဆိုရင်တောင် code အားလုံးကတစ်သတ်မတ်ထဲဖြစ်နိုင်ပါတယ်။

* [PSR-0 အကြောင်းဖတ်ရန် ][psr0]
* [PSR-1 အကြောင်းဖတ်ရန် ][psr1]
* [PSR-2 အကြောင်းဖတ်ရန် ][psr2]
* [PSR-4 အကြောင်းဖတ်ရန် ][psr4]
* [PEAR Coding Standards အကြောင်းဖတ်ရန် ][pear-cs]
* [Zend Coding Standards အကြောင်းဖတ်ရန် ][zend-cs]
* [Symfony Coding Standards အကြောင်းဖတ်ရန် ][symfony-cs]

သင့်အနေနဲ့ code တွေကအထက်ဖော်ပြပါ recommendations တွေနဲ့ကိုက်ညီမှူရှိမရှိကို [PHP_CodeSniffer][phpcs] သုံးပြီးcheck နိုင်ပါတယ်၊ နောက်Sublime Text လို code editor မျိုးမှာ code ရေးနေစဉ်အတွင်းမှာဘာတွေမှားလည်းဆိုတာတွေကို real time သိချင်ရင်တော့ [Sublime Text 2][st-cs] plugin ကိုအသုံးပြုနိုင်ပါတယ်။ 

While being newer, it makes great improvements in performance, meaning real-time editor fixing is more fluid.

သင့်အနေနဲ့ အောက်ဖော်ပြပါ tools တစ်ခုကိုအသုံးပြုပြီးတော့ code layout တွေကို အလိုအလျောက် fix လုပ်နိုင်ပါတယ်။ တစ်ခုက Potencier ရဲ့
[PHP Coding Standards Fixer][phpcsfixer]ပါ၊ အဲ့ဒါက ကောင်းကောင်း test လုပ်ထားတဲ့ codebase တစ်ခုပါ။ အဲ့ဒါက ကြီးတယ်၊ လေးတယ် ဒါပေမယ့်အရမ်းstable ဖြစ်တယ်၊ ကြီးမားတဲ့ project တွေဖြစ်တဲ့ Magento နဲ့ Symfony လို projects ကြီးတွေကတောင်အသုံးပြုတယ်။ နောက်ထက်ရွေးချယ်စရာတစ်ခုကတော့ [php.tools][phptools] ပါ၊ ဒါက [sublime-phpfmt][sublime-phpfmt] plugin အဖြစ်လူသိများပါတယ်။ အသစ်ဖြစ်လာတာနဲ့တစ်ပြိုင်တည်း စွမ်းဆောင်ရည်မှာပိုပြီးကောင်းလာပါတယ်ဒါကဘာကိုဆိုလိုတာလည်းဆိုရင် code ရေးနေစဥ်အတွင်းမှာ editor ကအမှားတွေကို fix ပေးတာက ပိုကောင်းတာပါဘဲ။

Symbol name တွေနဲ့ code infrastructure တွေကိုတော့ Englsih အသုံးပြုဖို့ရည်ညွှန်းပါတယ်။ Comments တွေကိုတော့နောက်ဒီ code ကို maintain လုပ်မယ့်လူ/အခုလက်ရှိ maintain လုပ်နေတဲ့သူ အဆင်ပြေမယ့် language တွေမှာရေးနိုင်ပါတယ်။

[fig]: http://www.php-fig.org/
[psr0]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md
[psr1]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md
[psr2]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md
[psr4]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md
[pear-cs]: http://pear.php.net/manual/en/standards.php
[zend-cs]: http://framework.zend.com/wiki/display/ZFDEV2/Coding+Standards
[symfony-cs]: http://symfony.com/doc/current/contributing/code/standards.html
[phpcs]: http://pear.php.net/package/PHP_CodeSniffer/
[st-cs]: https://github.com/benmatselby/sublime-phpcs
[phpcsfixer]: http://cs.sensiolabs.org/
[phptools]: https://github.com/dericofilho/php.tools
[sublime-phpfmt]: https://github.com/dericofilho/sublime-phpfmt
